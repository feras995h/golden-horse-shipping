version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: golden-horse-postgres
    environment:
      POSTGRES_DB: golden_horse_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: GoldenHorse2024!
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - golden-horse-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d golden_horse_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: golden-horse-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:GoldenHorse2024!@postgres:5432/golden_horse_db
      JWT_SECRET: GoldenHorse-JWT-Secret-Key-2024-Production-Change-This
      JWT_EXPIRES_IN: 24h
      NEXT_PUBLIC_API_URL: /api
      CORS_ORIGIN: http://72.60.92.146,https://72.60.92.146,http://localhost:3000
      DB_SYNCHRONIZE: false
      DB_LOGGING: false
      SHIPSGO_API_URL: https://api.shipsgo.com
      SHIPSGO_API_KEY: your-shipsgo-api-key-here
      SHIPSGO_USERNAME: your-shipsgo-username
      SHIPSGO_PASSWORD: your-shipsgo-password
      APP_NAME: Golden Horse Shipping
      APP_VERSION: 1.0.0
      DEFAULT_LANGUAGE: ar
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "3001:3001"
    networks:
      - golden-horse-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: golden-horse-frontend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: /api
      NEXT_PUBLIC_APP_NAME: Golden Horse Shipping
      NEXT_PUBLIC_APP_VERSION: 1.0.0
      NEXT_PUBLIC_DEFAULT_LANGUAGE: ar
      NEXT_PUBLIC_VPS_URL: http://72.60.92.146
      NEXT_TELEMETRY_DISABLED: 1
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - golden-horse-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: golden-horse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - golden-horse-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  golden-horse-network:
    driver: bridge
      - golden-horse-network
    restart: unless-stopped

  reverse-proxy:
    image: nginx:alpine
    container_name: golden-horse-proxy
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      # TLS to be added later when domain is ready
      # - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - golden-horse-network
    restart: unless-stopped

volumes:
  postgres_data:
  backend_uploads:

networks:
  golden-horse-network:
    driver: bridge
